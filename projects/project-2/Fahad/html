<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ETL Flower Data Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Chart.js Library -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        #chart-container {
            width: 80%;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <h1>Flower Data - Sales by Zip Code</h1>
    <div id="chart-container">
        <canvas id="flowerChart"></canvas>
    </div>

    <script>
        // Simulated data sources
        const mongoData = {
            database: "MongoDB",
            flowers: [
                { name: "Rose", color: "Red", price: 10, stock: 100, zip_code: "10001" },
                { name: "Tulip", color: "Yellow", price: 7, stock: 150, zip_code: "10002" },
                { name: "Orchid", color: "Purple", price: 15, stock: 80, zip_code: "10003" },
                { name: "Sunflower", color: "Yellow", price: 5, stock: 200, zip_code: "10004" },
                { name: "Daisy", color: "White", price: 3, stock: 300, zip_code: "10005" }
            ]
        };

        const sqlData = {
            database: "SQL",
            flower_sales: [
                { name: "Rose", units_sold: 50, revenue: 500, zip_code: "10001" },
                { name: "Tulip", units_sold: 70, revenue: 490, zip_code: "10002" },
                { name: "Orchid", units_sold: 30, revenue: 450, zip_code: "10003" },
                { name: "Sunflower", units_sold: 90, revenue: 450, zip_code: "10004" },
                { name: "Daisy", units_sold: 120, revenue: 360, zip_code: "10005" }
            ]
        };

        // Combine the data we want for the graph
        const zipCodes = sqlData.flower_sales.map(sale => sale.zip_code); // Zip codes
        const unitsSold = sqlData.flower_sales.map(sale => sale.units_sold); // Units sold

        // Create the bar chart using Chart.js
        const ctx = document.getElementById('flowerChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar', // Bar chart
            data: {
                labels: zipCodes, // X-axis labels (zip codes)
                datasets: [{
                    label: 'Units Sold',
                    data: unitsSold, // Y-axis values (units sold)
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)', // Colors for the bars
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)', // Border colors for the bars
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top' // Legend position
                    },
                    title: {
                        display: true,
                        text: 'Flower Sales by Zip Code'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true // Start y-axis at 0
                    }
                }
            }
        });
    </script>
</body>
</html>

